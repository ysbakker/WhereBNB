<nav>
    <ul class="pagination">
        <li class="page-item@(CurrentPage == 1 ? " disabled" : "")">
            <a class="page-link" href="#" @onclick="async () => await HandleChangePage(CurrentPage - 1)" tabindex="-1">
                <i class="bi-arrow-left-circle-fill"></i>
            </a>
        </li>
        @if (CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="#" @onclick="async () => await HandleChangePage(1)">1</a>
            </li>
        }
        @if (CurrentPage > 2)
        {
            <li class="page-item disabled">
                <a class="page-link">...</a>
            </li>
        }
        <li class="page-item active">
            <a class="page-link" href="#">@CurrentPage</a>
        </li>
        @if (CurrentPage < MaxPage - 1)
        {
            <li class="page-item disabled">
                <a class="page-link">...</a>
            </li>
        }
        @if (CurrentPage < MaxPage)
        {
            <li class="page-item">
                <a class="page-link" href="#" @onclick="async () => await HandleChangePage(MaxPage)">@MaxPage</a>
            </li>
        }
        <li class="page-item@(CurrentPage >= MaxPage ? " disabled" : "")">
            <a class="page-link" href="#" @onclick="async () => await HandleChangePage(CurrentPage + 1)">
                <i class="bi-arrow-right-circle-fill"></i>
            </a>
        </li>
    </ul>
</nav>

@code {

    [Parameter]
    public int CurrentPage { get; set; }

    [Parameter]
    public int MaxPage { get; set; } = 10;

    [Parameter]
    public Func<int, Task> ChangePage { get; set; }

    private async Task HandleChangePage(int page)
    {
        await ChangePage(page);
    }

}